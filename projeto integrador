import java.util.Objects;
import java.util.Scanner;

public class lig4{


    /** Variaveis globais*/
    String [][] tabuleiro;
    Boolean Vencedor;
    Boolean Empate;
    int jogadorVencedor;
    int vezdoJogador;
     
    /**
     * construção
     */
    public lig4(){
        jogadorVencedor = 0;
        Empate = false;
        vezdoJogador = 1;
        tabuleiro = new String[6][7];
        novoTabuleiro();
        paineldeExibicao();






    }

    /**
     * metodo para criar um novo tabuleiro
     */
    private void novoTabuleiro(){
        for(int i = 0; i < 6; i++){
            for(int j = 0; j < 7; j++){
                tabuleiro[i][j] = " - ";
            }
        }
    }

    /**
     * metodo para exibir o tabuleiro
     */
    private void paineldeExibicao(){
        System.out.println("  ");
        System.out.println("  *** BEM-VINDOS AO LIG4 ***");
        System.out.println("  ");
        for (int i = 0; i < 6; i++){
            for (int j = 0; j < 7; j++){
                System.out.print(tabuleiro[i][j]);
            }
            System.out.println("  ");
        }
    }

    /**
     * metodo para verificar se o tabuleiro esta cheio
     * @return
     */
    private boolean validInput(String input){
        String b;
        return ((Objects.equals(input, "1")) ||
         (Objects.equals(input, "2")) ||
          (Objects.equals(input, "3")) ||
           (Objects.equals(input, "4")) ||
            (Objects.equals(input, "5")) ||
             (Objects.equals(input, "6")) ||
              (Objects.equals(input, "7")));

           
        }

        /**
         * coluna cheia
         * @param coluna
         * @return true se a coluna estiver cheia
         */
        private boolean colunaCheia(int coluna){
            return (tabuleiro[0][coluna-1] == " X " || tabuleiro[0][coluna-1] == " O ");
        }

        /**
         * coluna escolhida
         * @param coluna
         * @return a linha onde o jogador colocou a peça
         */
        private int colunaEscolhida(int coluna){
            int posicao = 5;
            boolean encontre = false;
            while (posicao >= 0 && !encontre){
                if (!Objects.equals(tabuleiro[posicao][coluna-1], " X ") && !Objects.equals(tabuleiro[posicao][coluna-1], " O ")){
                    tabuleiro[posicao][coluna-1] = " X ";
                    encontre = true;

                } else {
                    posicao--;
                }

            }
            return posicao;
        }
        
         /**
         * verifica se o jogador ganhou
         * @param linha
         * @param coluna
         * @return true se o jogador ganhou
         */
        private void swpJogador(){
            if (vezdoJogador == 1){
                vezdoJogador = 2;
            } else {
                vezdoJogador = 1;
            }
        }

        private void peçadeLugar(){

            /**
             * peça de lugar
             * peça de lugar na coluna escolhida pelo jogador e na linha disponivel
             */

            //verificar coluna disponivel
            Scanner sc = new Scanner(System.in);
            System.out.println("Jogador " + vezdoJogador + " - Por favor escolha uma coluna(1-7)");
            String input = sc.nextLine();

            while(!validInput(input) || colunaCheia(Integer.parseInt(input))){
                System.out.println("Jogador " + vezdoJogador + " - Por favor escolha uma coluna(1-7)");
                input = sc.nextLine();
            }
            while (colunaCheia(Integer.parseInt(input))){
                System.out.println("Jogador " + vezdoJogador + " - Por favor escolha uma coluna");
                input = sc.nextLine();
                if (!colunaCheia(Integer.parseInt(input))){
                    break;
                }
            }
            int coluna = Integer.parseInt(input) -1; //jogadores escolhem a coluna

            //verificar linha disponivel
            System.out.println("Verificar linha disponivel: " + obteroPróximoSlotDisponível(colunaEscolhida(coluna)));

            //peça de lugar
            String peçaDeLugar;
            if (vezdoJogador == 1){
                peçaDeLugar = " X ";
            } else {
                peçaDeLugar = " O ";
            }
            tabuleiro[colunaEscolhida(coluna)][coluna] = peçaDeLugar;

            paineldeExibicao();
            swpJogador();
            
        }
       
        /**
         * verifica se o tabuleiro esta cheio
         * @return true se o tabuleiro estiver cheio - false se o tabuleiro nao estiver cheio
         */
        private boolean tabuleiroCheio(){
            boolean full = true;
            for (int i = 0; i<1; i++){
                for (int j = 0; j<7; j++){
                    if (tabuleiro[i][j] != " X " && tabuleiro[i][j] != " O "){
                        full = false;
                    }
                        
                }
            }
            
            return full;
        }


        /**
         * chevar vencedor vertical
         * @return true se o jogador ganhou (X ou O)
         */
        
        private String checarVencedorVertical(){
            String symbol = null;
            for (int i = 0; i<3; i++){
                for (int j = 0; j<7; j++){
                    if((tabuleiro[i][j] == tabuleiro[i+1][j]) && (tabuleiro[i][j] == tabuleiro[i+2][j]) && (tabuleiro[i][j] == tabuleiro[i][j+3])){
                        if (tabuleiro[i][j] == " X " || tabuleiro[i][j] == " O "){
                            symbol = tabuleiro[i][j];
                        }
                    }
                }
            }
            return symbol;
        }

        /**
         * chevar vencedor horizontal
         * @return true se o jogador ganhou (X ou O)
         */
        
         private String checarVencedorHorizontal(){
            String symbol = null;
            for (int i = 0; i<6; i++){
                for (int j = 0; j<4; j++){
                    if((tabuleiro[i][j] == tabuleiro[i][j+1]) && (tabuleiro[i][j] == tabuleiro[i][j+2]) && (tabuleiro[i][j] == tabuleiro[i][j+3])){
                        if (tabuleiro[i][j] == " X " || tabuleiro[i][j] == " O "){
                            symbol = tabuleiro[i][j];
                        }
                    }
                }
            }
            return symbol;
        }

        /**
         * chevar vencedor diagonal esquerda
         * @return true se o jogador ganhou (X ou O)
         */
        
         private String checarVencedorDiagonalEsquerda(){
            String symbol = null;
            for (int i = 0; i<3; i++){
                for (int j = 0; j<4; j++){
                    if((tabuleiro[i][j] == tabuleiro[i+1][j+1]) && (tabuleiro[i][j] == tabuleiro[i+2][j+2]) && (tabuleiro[i][j] == tabuleiro[i+3][j+3])){
                        if (tabuleiro[i][j] == " X " || tabuleiro[i][j] == " O "){
                            symbol = tabuleiro[i][j];
                        }
                    }
                }
            }
            return symbol;
        }

        /**
         * chevar vencedor diagonal direita
         * @return true se o jogador ganhou (X ou O)
         */
        
         private String checarVencedorDiagonalDireita(){
            String symbol = null;
            for (int i = 0; i<3; i++){
                for (int j = 0; j<4; j++){
                    if((tabuleiro[i][j] == tabuleiro[i+1][j-1]) && (tabuleiro[i][j] == tabuleiro[i+2][j-2]) && (tabuleiro[i][j] == tabuleiro[i+3][j-3])){
                        if (tabuleiro[i][j] == " X " || tabuleiro[i][j] == " O "){
                            symbol = tabuleiro[i][j];
                        }
                    }
                }
            }
            return symbol;
        }


        /**
         * verifica se o jogador ganhou
         * @return 
         * @return 1 ou 2
         */
        private int jogadorVencedor(){
            int vencedor = 0;
            String symbol = " ";

            if (checarVencedorVertical() == " X " || checarVencedorVertical() == " O "){
                 symbol = checarVencedorVertical();
            } else if (checarVencedorHorizontal() == " X " || checarVencedorHorizontal() == " O "){
                symbol = checarVencedorHorizontal();

            } else if (checarVencedorDiagonalEsquerda() == " X " || checarVencedorDiagonalEsquerda() == " O "){
                symbol = checarVencedorDiagonalEsquerda();

            } else if (checarVencedorDiagonalDireita() == " X " || checarVencedorDiagonalDireita() == " O "){
                symbol = checarVencedorDiagonalDireita();


            }

            if (symbol == " X "){
                vencedor = 1;
            } else if (symbol == " O "){
                vencedor = 2;
            }
            return vencedor;

        }
        
        /**
         * verifica se houve empate
         * @return true se houve empate
         */
        private boolean checarEmpate(){
            return (tabuleiroCheio() && (jogadorVencedor() == 1 && jogadorVencedor() == 2));
        }


        /**
         * mostra o tabuleiro
         */
        private void mostrarVencedor(){
            System.out.println(" ");
            System.out.println(" *********************** ");
            System.out.println("     JOGADOR" + jogadorVencedor + " VENCEU!!! ");
            System.out.println(" *                   * ");
            System.out.println("     *  \\0/    *       ");
            System.out.println(" *    *   |   *     *  ");
            System.out.println("   *    / \\     *       ");
            System.out.println(" *                   * ");
            System.out.println(" *********************** ");
        }


        /**
         * jogar 1 rodada de lig4
         */
        public void iniciarJogo(){

            while(jogadorVencedor == 0){
                jogadorVencedor = jogadorVencedor();
                Empate = checarEmpate();
                if (jogadorVencedor == 1){
                    mostrarVencedor();
                    break;

                } else if (jogadorVencedor == 2){
                    mostrarVencedor();
                    break;
                } else if (Empate == true){
                    System.out.println("Deu empate!");
                    break;
                }
                peçadeLugar();

            }
        }


    private String obteroPróximoSlotDisponível(int colunaEscolhida) {
            return null;
        }

    /**
     * metodo principal
     * @param args
     */
    public static void main(String[] args){

        lig4 jogo = new lig4();
        jogo.iniciarJogo();

    }
}
